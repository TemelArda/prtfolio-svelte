{
    "project":[
        {
            "title":"Inverse Kinematics Simulator",
            "subTitle":"C++ IK Simulator using OpenGL", 
            "description":"Inverse Kinematics engine for animating a human character with 7 degrees of freedom (3 in shoulder 2 in elbow and wirst). Implemented using psuedo inverse of the Jacobian Matrix. Character is able to move his arm to the 3D point supplied by a hermite curve via computing correct angles in real-time.",
            "image": "https://i.gyazo.com/68535731532751a3f4addfc38717b1d5.gif",
            "link":"https://github.com/"

        },
        {
            "title":"Spring Mass simulation",
            "subTitle":"C++ Spring Mass simulation using OpenGL", 
            "description":"A spring mass system and a corresponding simulator that support an arbitrary number of particles. The particles can be connected with springs in arbitrary ways and are subject to external forces (drag, gravity, etc.). Real-time colision detection and response via penalty methods.",
            "image": "https://source.unsplash.com/random",
            "link":"https://github.com/"
        },
        {
            "title":"Spline Modeling and Key frame animation",
            "subTitle":"Hermite splines and keyframe animation implementation using OpenGL", 
            "description":"A spline modeling tool that supports an arbitatry number of points. Used for animating a 3D scene using keyframes. Catmull-rom initilization if no tangent values are provided for smooth curves. The spline can be exported to a file or read from a file.",
            "image": "https://source.unsplash.com/random",
            "link":"https://github.com/"
        },
        {
            "title":"Ray Tracer",
            "subTitle":"C++ Ray Tracer", 
            "description":".",
            "image": "https://source.unsplash.com/random",
            "link":"https://github.com/"
        }
    ]
}